allBook:
  get:
    operationId: allBook
    tags:
      - book
    summary: Get All Books
    responses:
      200:
        description: successful operation
        content:
          application/json:
            schema:
              title: all books response
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/Book'
                page:
                  $ref: 'common.yml#/components/schemas/Page'
      404:
        description: Book not found
        content: { }
getBook:
  get:
    operationId: getBook
    tags:
      - book
    summary: Get a Book
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
    responses:
      200:
        description: 获取一本书
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      404:
        description: 书不存在
        content:
          application/json:
            schema:
              $ref: 'common.yml#/components/schemas/Error'
saveBook:
  post:
    operationId: saveBook
    tags:
      - book
    summary: Create a new Book
    requestBody:
      description: create book request body
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Book'
    responses:
      200:
        description: successful operation
        content:
          application/json:
            schema:
              $ref: 'common.yml#/components/schemas/Empty'
      201:
        description: Created
    x-operation-extra-annotation: '@jakarta.annotation.security.RolesAllowed({"BOOK_MANAGE"})'



components:
  schemas:
    Book:
      type: object
      required:
        - id
        - name
        - author
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        born_date:
          type: string
          format: date
          description: Book born date
          example: "1999-01-30"
        author:
          type: string
        created:
          type: string
          format: date-time
          description: Book creation date and time
          example: "2023-01-30T08:30:00Z"

